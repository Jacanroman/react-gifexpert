{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","SetInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","console","log","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAwCeA,EApCK,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAAkB,EAEAC,mBAAS,IAFT,mBAE7BC,EAF6B,KAEjBC,EAFiB,KAmBpC,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAST,EACTU,SApBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,Y,uBCVlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACkCC,UAAUH,GAD5C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCeLO,EAZK,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAI3B,OACI,yBAAKc,UAAU,0CACZ,yBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,2BAAIA,KC0BAO,EA/BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAY,IAAD,EAEVd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJwB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KA4BpC,OArBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAd,GAIEe,QAAQC,IAAIhB,GACZY,EAAS,CACLf,KAAMG,EACNU,SAAQ,SAM1B,CAACpB,IAKIqB,EDxBwBM,CAAa3B,GAAhCa,EAHgB,EAGrBN,KAAaa,EAHQ,EAGRA,QAGpB,OACI,oCACA,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,WAGZ,yBAAKA,UAAU,aAGPH,EAAOJ,KAAI,SAAAC,GAAG,OACd,kBAAC,EAAD,eACIkB,IAAKlB,EAAIC,IACLD,UEoBTmB,EAxCM,WAAK,MAGc3C,mBAAS,CAAC,UAHxB,mBAGf4C,EAHe,KAGH7C,EAHG,KAYtB,OACI,6BACI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAID,4BAOS6C,EAAWrB,KAAI,SAAAT,GACX,OACI,kBAAC,EAAD,CACA4B,IAAO5B,EACPA,SAAUA,UC5BtC+B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.0b8220ee.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({setCategories}) =>{\n    \n    const [inputValue, SetInputValue] = useState('')\n    \n    const handleInputChange = (e) =>{\n        //console.log(e.target.value)\n        SetInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n\n        //console.log('Submit hecho')\n        if( inputValue.trim().length >2){\n            setCategories(cats =>[inputValue,...cats])\n            SetInputValue('');\n        }\n    }\n    \n    return(\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value = {inputValue}\n                onChange={ handleInputChange}\n            />\n        </form>\n    )\n}\n\n\nAddCategory.propTypes={\n    setCategories: PropTypes.func.isRequired\n}\n\n\nexport default AddCategory;","export const getGifs = async(category) =>{\n    const url= `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=MVivh7LcolawNf3jI0boihO3EA6Y91hT`\n    const resp = await fetch(url)\n    const {data} = await resp.json();\n\n    const gifs = data.map(img =>{\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\n\nconst GifGridItem = ({id,title,url}) => {\n    \n    \n    \n    return (\n        <div className=\"card animate__animated animate__bounce\">\n           <img src={url} alt= {title} />\n           <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GifGridItem;\n\n\n\n\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem'\n//import { getGifs } from '../helpers/getGifs'\n\nconst GifGrid = ({category}) => {\n\n\n    const {data:images, loading} = useFetchGifs(category);\n\n\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n\n        \n        <div className=\"card-grid\">\n            \n            \n            {   images.map(img =>(\n                <GifGridItem \n                    key={img.id}\n                    {...img} />\n                ))\n            }\n\n            \n        </div>\n        \n        </>\n    )\n}\n\n\nexport default GifGrid;","import {useState, useEffect} from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = (category)=>{\n\n    const [state, setState] = useState({\n        data:[],\n        loading:true\n    });\n\n    useEffect(()=>{\n        \n        getGifs(category)\n            .then(img =>{\n\n                \n                    \n                    console.log(img)\n                    setState({\n                        data: img,\n                        loading:false\n                    })\n\n                \n            })\n\n    },[category])\n\n\n    \n\n    return state;  // {data:[], loading:true};\n\n}","import React, {useState} from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () =>{\n\n    //const categories = ['One Punch', 'Samurai x', 'Dragon Ball']\n    const [categories, setCategories] = useState(['X-men'])\n\n    /*\n    const handleAdd = () =>{\n        //setCategories([...categories,'hollaaa']);\n        setCategories(cats =>[...cats,'juan'])\n    }\n    */\n\n    return(\n        <div>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories = {setCategories} />\n            <hr/>\n            {/*<button onClick={handleAdd}>Agregar</button>*/ }\n            \n            \n           <ol>\n               {/*\n                   categories.map(category =>{\n                       return (<li key={category}>{category}</li>)\n                   })\n                */}\n                {\n                    categories.map(category =>{\n                        return (\n                            <GifGrid \n                            key = {category}\n                            category={category} />\n                        )\n                    })\n                }\n           </ol>\n        </div>\n    )\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}